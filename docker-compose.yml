services:
  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
    volumes:
      - ./kong.yml:/kong/kong.yml
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - kong-net

  auth-service:
    container_name: auth-service
    build: 
      context: ./backend/Authentication
      dockerfile: Dockerfile
    env_file:
      - ./backend/Authentication/.env
    environment:
      - JWT_SECRET=esd_jwt_secret_key
      - JWT_ALGORITHM=HS256
      - DB_HOST=auth-db
      - DB_NAME=authdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    ports:
      - "5001:5001"
    networks:
      - kong-net

  post-service:
    build: 
      context: ./backend/post
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - ./backend/post/.env
    environment:
      - JWT_SECRET=esd_jwt_secret_key
      - JWT_ALGORITHM=HS256
      - DB_NAME=postdb
      - DB_USER=postgres
      - DB_PASSWORD=root
      - DB_HOST=post-db
      - DB_PORT=5432
    ports:
      - "5000:5000"
    networks:
      - kong-net

  # post-db:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_DB: postdb
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: root
  #   networks:
  #     - kong-net
  #   volumes:
  #     - post_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  user-service:
    build: 
      context: ./backend/User
      dockerfile: Dockerfile
    env_file:
      - ./backend/User/.env
    environment:
      - JWT_SECRET=esd_jwt_secret_key
      - JWT_ALGORITHM=HS256
    ports:
      - "5002:5002"
    networks:
      - kong-net

networks:
  kong-net:
    name: g3t1_kong-net
    driver: bridge

volumes:
  kong_data:
  post_data:
  auth_data: